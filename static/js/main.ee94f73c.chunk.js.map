{"version":3,"sources":["index.js"],"names":["App","props","handleScroll","st","window","pageYOffset","document","documentElement","scrollTop","clickFired","state","lastScroll","scrolled","body","style","overflow","screenCheck","navLength","navOptions","navOrder","pageLength","i","scrollHelper","setState","setTimeout","alterPageLength","bodyRect","getBoundingClientRect","rect","getElementById","bottom","top","about","projects","contact","item","this","key","indexOf","scrollIntoView","prevState","num","scrollTo","length","addEventListener","removeEventListener","About","Projects","Contact","DotNav","onClick","handleClick","React","Component","dots","Object","keys","map","Dot","link","active","id","className","backgroundColor","Project","name","toLowerCase","ReactDOM","render"],"mappings":"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","file":"static/js/main.ee94f73c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            navOrder: ['about', 'projects', 'contact'],\n            navOptions: {\n                about: true, \n                projects: false, \n                contact: false\n            },\n            lastScroll: 0,\n        }\n    }\n\n    handleClick(item) {\n\n        const pageLength = this.pageLength;\n\n        for (let key in this.state.navOptions) {\n            if(item === key && this.state.navOptions[item]) {\n                this.setState({ lastScroll: (this.state.navOrder.indexOf(key) * pageLength) })\n                document.getElementById(key).scrollIntoView(true);\n                return;\n            } else if(item === key && !this.state.navOptions[item]) {\n                this.setState(prevState => {\n                    let navOptions = { ...prevState.navOptions };\n                    navOptions[item] = true;                   \n                    return { navOptions };                               \n                });\n                this.setState({ lastScroll: (this.state.navOrder.indexOf(key) * pageLength) })\n                document.getElementById(key).scrollIntoView(true);\n            } else {\n                this.setState(prevState => {\n                    let navOptions = { ...prevState.navOptions };\n                    navOptions[key] = false;                   \n                    return { navOptions };                               \n                });\n            }\n        }\n        this.clickFired = true;        \n    }\n\n    scrollHelper(navOrder, pageLength, i, num) {\n        this.setState(prevState => {\n            let navOptions = { ...prevState.navOptions };\n            navOptions[navOrder[i]] = false;\n            navOptions[navOrder[i + num]] = true;\n            return { navOptions };                               \n        });\n        this.setState({ lastScroll: (i + num) * pageLength })\n        window.scrollTo(0, this.state.lastScroll);\n    }\n\n    handleScroll = () => {\n        let st = window.pageYOffset || document.documentElement.scrollTop;\n\n        if (this.clickFired) {\n            if (st === this.state.lastScroll) {\n                this.clickFired = false;\n            }\n        } else if (!this.scrolled) {\n            document.body.style.overflow = 'hidden';\n            this.scrolled = true;\n            if (!this.screenCheck) {\n                this.setState({ lastScroll: 0 });\n            } else {\n                let st = window.pageYOffset || document.documentElement.scrollTop;\n                const navLength = this.navLength;\n                const navOptions = this.state.navOptions;\n                const navOrder = this.navOrder;\n                const pageLength = this.pageLength;     \n                \n                if (st > this.state.lastScroll) {\n                    for (let i=0; i < navLength; i++) {\n                        if (navOptions[navOrder[i]] && i < navLength - 1) {\n                            this.scrollHelper(navOrder, pageLength, i, 1);\n                            break;\n                        }\n                    }\n                } else {\n                    for (let i=0; i < navLength; i++) {\n                        if (navOptions[navOrder[i]] && i > 0) {\n                            this.scrollHelper(navOrder, pageLength, i, -1);\n                            break;\n                        }\n                    }\n                }                \n            }\n            setTimeout(() => {\n                this.scrolled = false;\n                this.screenCheck = true;\n                document.body.style.overflow = 'visible';\n            }, 1000);\n        }\n    }\n\n    alterPageLength = () => {\n        this.bodyRect = document.body.getBoundingClientRect();\n        this.rect = document.getElementById([this.navOrder[0]]).getBoundingClientRect();\n        this.pageLength = this.rect.bottom - this.bodyRect.top; \n    }\n    componentDidMount() {\n        this.setState({ lastScroll: window.pageYOffset });\n        this.scrolled = false;\n        this.clickFired = false;\n        this.navLength = this.state.navOrder.length;\n        this.navOrder = this.state.navOrder;\n        this.screenCheck = this.state.lastScroll === window.pageYOffset;\n        \n        this.bodyRect = document.body.getBoundingClientRect();\n        this.rect = document.getElementById([this.navOrder[0]]).getBoundingClientRect();\n        this.pageLength = this.rect.bottom - this.bodyRect.top; \n        window.scrollTo(0, this.state.lastScroll);\n\n\n        window.addEventListener('scroll', this.handleScroll);\n        window.addEventListener('resize', this.alterPageLength);\n    }\n      \n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleScroll);\n        window.removeEventListener('resize', this.alterPageLength);\n    }\n\n    render() {\n        return (\n            <div>\n                <About />\n                <Projects />\n                <Contact />\n                <DotNav \n                    onClick={(item) => this.handleClick(item)} \n                    navOptions={this.state.navOptions}\n                />\n            </div>\n        );\n    }\n}\n\nclass DotNav extends React.Component {\n\n    render() {\n        const dots = Object.keys(this.props.navOptions).map((item) => \n            <Dot \n                key={item}\n                link={item} \n                active={this.props.navOptions[item]} \n                onClick={() => this.props.onClick(item)}\n            />\n        )\n        return (\n            <div id='dot-nav'>\n                {dots}\n            </div>\n        );\n    }\n}\n\nfunction Dot(props) {\n    return (\n        <div \n            id={props.link + '-nav'} \n            className='dot'\n            style={{ backgroundColor: props.active ? 'rgb(30, 30, 30)' : '' }}\n            onClick={props.onClick}\n        />\n    );\n}\n\nfunction About(props) {\n        return (\n            <div id='about' className='bg' >\n                <div id='about-text'>\n                    <h1>Hi, I'm Jeff</h1>\n                    <p>Passionate about marketing, strategy, technology & design</p>\n                </div>\n                <div id='arrow' />\n            </div>\n        );\n}\n\nfunction Projects(props) {\n    return (\n        <div id='projects' className='bg' >\n            <h1>Projects</h1>\n                <Project name='Photography'/>\n                <Project name='Apps'/>\n                <Project name='Data' />\n                <Project name='Games' />\n        </div>\n    );\n}\n\nfunction Project(props) {\n    return (\n        <div id={props.name.toLowerCase()} className='project-item'>\n            <p>{props.name}</p>\n        </div>\n    );\n    //Project link shows details on hover\n}\n\nfunction Contact(props) {\n    return (\n        <div id='contact' className='bg' >\n            <h1>Contact Me</h1>\n            <p>Email LinkedIn Instagram</p>\n        </div>\n        \n    );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}